//@import "partials/variables" "partials/mixins";//We can use this as well
@import "partials/functions";
@import "partials/variables";
@import "partials/mixins";

@for $i from 1 through /* we can use 'to' also*/ 6{
  .col-#{$i}{
    width: $i * 2em;
  }
}

$brands: mc, bk, picu;
@each $company in $brands{
  .#{$company}-profile{
    background-image: url('img/#{$company}.png');
  }
}

$font-sizes: (tiny: 8px, small: 11px, medium: 13px, large: 18px);
@each $name, $size in $font-sizes{
  .#{$name}{
    font-size: #{$size};
  }
}

$j: 2;
@while $j <= 8{
  .picture-#{$j}{
    width: $j * 10%;
  }
  $j: $j + 2;
}

@include google-fonts("Alegreya+Sans");
@include google-fonts("Titillium+Web");

@include apply-to-ie-6{
  body{
    font-size: 125%;
  }
}
@include fancy-links;

//$contrast: high;
body {
  font-family: $text-font;
  margin:0;
  font-size: em(18px);
  color: $text-color;

  /*@if $contrast == high {
    color: #000;
  } @else if $contrast == low{
    color : #999;
  } @else {    
    color: $text-color;
  }*/

  @include sm-font-size;
}

h1, h2, h3, h4 {
  font-family: $headline-font;
  
  @include sm-screen{
    font-size: em(46px);
  }
}

h2{
  @include large-text;
}

p {
  font-family: $text-font;
}

a {
  color: $link-color;
  text-decoration: unset;

  @include mc{
    color: red;
  }

  @include bk{
    color: orange;
  }

  @include picu{
    color: green;
  }

  &:hover{
    color: darken($link-color, 15%);
  }
}

.error{
  color: red;
}

.critical-error{
  @extend .error;
  bottom: 1px solid red;
  font-weight: bold;
}

.warning-button{
  cursor: pointer;
  @include warning;
  padding: 8px 12px;
  //@include box(8px, 1px solid $ternary-color);
  //@include box(8px);
  //@include box($border: 1px solid $ternary-color);//Only pass second parameter
  @include box($border: 1px solid $ternary-color, $radius: 12px);

  @include sm-screen{
    font-size: em(32px);
  }
}

%highlight {//We only use this (%) to set a code that can be extended on toher selectors
  font-style: italic;
}

.sub-title{
  @extend %highlight;
  @extend .foo !optional;//Include if the rule exist, otherwise it'snot going to return an error
}

.cta-button{
  @extend .warning-button;
  @extend .error;
  @include rounded;
  font-weight: bold;
}

#header {
  @include box-shadow(2px 0px 4px #999, 1px 1px 6px $theme-color);
  background-color: $theme-color;
  #main-menu {
    ul{
      width: 960px;
      height: 60px;
      margin: 0 auto;
      @include center-flex-element;

      li{
        @include flex-grow-33;
        list-style-type: none;
      }
    }
    a{
      color: $menu-item-color;
      padding: 6px 8px;
      border-bottom: 1px solid transparentize($color: #fefefe, $amount: 1);
      transition: border-bottom 1s;
      transition-timing-function: ease-in-out;

      &:hover{
        border-bottom: 1px solid opacify($color: #fefefe, $amount: .95);
      }
    }
    ~img{
      display:none;
    }
  }
  
  #logo {

  }
}

#main {
  width: $content-width;
  @include sm-width;
  margin: auto;
  display: flex;
  gap: em(32px);

  #content {
    flex: 1 1 auto;
  }

  #sidebar {
    flex: 1 0 auto;
    ul{
      @include center-flex-element;
      flex-direction: column;
      padding: 0;

      li{
        list-style-type: none;
        padding: em(16px);
        //width: 2*$col;
        text-align: center;
        border-bottom: 1px dashed darken($color: #666, $amount: 0);
        cursor: pointer;
        
        @include sm-screen{
          font-size: em(32px);
        }

        &:hover{
          border-bottom: 1px dashed lighten($color: #666, $amount: .5);
          background-color: darken($color: #ccc, $amount: 0);
        }
      }
    }
  }
}

#footer {
  height: $footer-height;
  background-color: $ternary-color;
  display: flex;
  justify-content: center;

  &:before{
    display: inline-flex;
    align-items: center;
    @include mc{
      color: red;
      content: 'MacDonalds';
    }
  
    @include bk{
      color: orange;
      content: 'Burguer King';
    }
  
    @include picu{
      color: green;
      content: 'Piculin';
    }
  }  
}
